@model CatalogPagingFilteringModel
@using Nop.Web.Models.Catalog;

<div class="col-xs-12 list urun-list__options">
    @if (Model.AllowProductSorting)
    {
        @Html.DropDownList("products-orderby", Model.AvailableSortOptions, new { onchange = "setLocation(this.value);" })
    }
    @if (Model.AllowProductViewModeChanging)
    {
    <div class="grid-options hidden-xs">
    <!-- Single button -->
        <div class="btn-group">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Görünüm: &nbsp;<span class="glyphicon glyphicon-th-large" aria-hidden="true"></span>
            </button>
            <ul class="dropdown-menu">
                <li id="grid_to3"><a href="#3"><span class="glyphicon glyphicon-th-large" aria-hidden="true"></span></a></li>
                <li id="grid_to4"><a href="#4"><span class="glyphicon glyphicon-th" aria-hidden="true"></span></a></li>
                <li id="grid_tolist"><a href="#list"><span class="glyphicon glyphicon-th-list" aria-hidden="true"></span></a></li>
            </ul>
        </div>
    </div>
    }
    @if (Model.AllowCustomersToSelectPageSize)
    {
        @Html.DropDownList("products-pagesize", Model.PageSizeOptions, new { onchange = "setLocation(this.value);" })
    }
</div>
@*<div class="product-selectors">*@
    @*view mode*@
    @*@if (Model.AllowProductViewModeChanging)
    {
        <div class="product-viewmode">
            <span>@T("Catalog.ViewMode")</span>
            @if (Model.AvailableViewModes.Count > 1)
            {
                var gridMode = Model.AvailableViewModes[0];
                var listMode = Model.AvailableViewModes[1];

                <a class="viewmode-icon grid @if(gridMode.Selected){<text>selected</text>}" href="@gridMode.Value" title="@gridMode.Text">@gridMode.Text</a>
                <a class="viewmode-icon list @if (listMode.Selected){<text>selected</text>}" href="@listMode.Value" title="@listMode.Text">@listMode.Text</a>
            }
        </div>
    }*@
    @*sorting*@
    @*@if (Model.AllowProductSorting)
    {
        <div class="product-sorting">
            <span>@T("Catalog.OrderBy")</span>
            @Html.DropDownList("products-orderby", Model.AvailableSortOptions, new { onchange = "setLocation(this.value);" })
        </div>
    }*@
    @*page size*@
    @*@if (Model.AllowCustomersToSelectPageSize)
    {
        <div class="product-page-size">
            <span>@T("Catalog.PageSize")</span>
            @Html.DropDownList("products-pagesize", Model.PageSizeOptions, new { onchange = "setLocation(this.value);" })
            <span>@T("Catalog.PageSize.PerPage")</span>
        </div>
    }
</div>*@